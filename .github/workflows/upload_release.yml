name: Upload the build when a new release is published

# To publish a new version, publish an empty release and this will populate it, and also upload to PyPi

on:
  release:
    types: 
      - created
      - edited # can use this to re-trigger in case it failed
  
  workflow_dispatch: # allows manual triggering of the workflow, mostly just for debugging/problem solving

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for Trusted Publishing
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine sphinx build
      - name: Build whl and zip
        run: |
          python -m build
          mv dist/*.whl ./
          
          zip sphinx_autodocgen_${{ github.event.release.tag_name }}.zip *.whl README.rst LICENSE CHANGELOG.rst

      - name: Upload to GitHub Release
        run: gh release upload ${{github.event.release.tag_name}} sphinx_autodocgen_${{ github.event.release.tag_name }}.zip --clobber
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Be careful, must be final as releases cannot be deleted from here"
        #with:
        #  repository-url: https://test.pypi.org/legacy/
